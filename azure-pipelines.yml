# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build

    pool:
      name: task-master

    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'test'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      inputs:
        containerRegistry: 'taskmasterdockerhub'
        repository: 'charlesjatto/myapp'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)

- stage: Provision
  displayName: 'Terraforming on Azure...'
  dependsOn: Build
  jobs:
  - job: Provision
    displayName: 'Provisioning Container Instance'
    pool:
      name: task-master
    variables: 
    - group: TeraformEnvVars
    steps:
    - script: |
        set -e
        cd azure-Tf-Infra

        # Initialize Terraform
        terraform init -input=false

        # Import the existing resource group using variables
        terraform import azurerm_resource_group.az-test /subscriptions/$(ARM_SUBSCRIPTION_ID)/resourceGroups/project_rg

        terraform apply -input=false --auto-approve

      name: 'RunTerraform'
      displayName: 'Run Terraform'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_imagebuild: $(tag)

- stage: Destroy
  displayName: 'Destroying Terraform Infrastructure'
  dependsOn: Provision
  jobs:
  - job: Destroy
    displayName: 'Destroy Infrastructure'
    pool:
      name: task-master
    variables:
    - group: TeraformEnvVars
    steps:
    - script: |
        set -e
        cd azure-Tf-Infra

        # Initialize Terraform
        terraform init -input=false
        
        terraform destroy -input=false --auto-approve
      name: 'RunTerraformDestroy'
      displayName: 'Run Terraform Destroy'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_imagebuild: $(tag)